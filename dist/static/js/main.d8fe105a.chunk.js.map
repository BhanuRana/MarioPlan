{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authAction.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d8fe105a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authAction';\r\n\r\nconst SignedInLinks = (props) => {\r\n\treturn (\r\n\t\t<ul className=\"right\">\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to=\"/create\">New Project</NavLink>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<a onClick={props.signOut}>Log Out</a>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n\t\t\t\t\t{props.profile.initials}\r\n\t\t\t\t</NavLink>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsignOut: () => dispatch(signOut())\r\n\t};\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = (credentials) => {\r\n\treturn (dispatch, getState, { getFirebase }) => {\r\n\t\tconst firebase = getFirebase();\r\n\r\n\t\tfirebase\r\n\t\t\t.auth()\r\n\t\t\t.signInWithEmailAndPassword(credentials.email, credentials.password)\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({ type: 'LOGIN_SUCCESS' });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tdispatch({ type: 'LOGIN_ERROR', err });\r\n\t\t\t});\r\n\t};\r\n};\r\n\r\nexport const signOut = () => {\r\n\treturn (dispatch, getState, { getFirebase }) => {\r\n\t\tconst firebase = getFirebase();\r\n\r\n\t\tfirebase.auth().signOut().then(() => {\r\n\t\t\tdispatch({ type: 'SIGNOUT_SUCCESS' });\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n\treturn (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\t\tconst firebase = getFirebase();\r\n\t\tconst firestore = getFirestore();\r\n\r\n\t\tfirebase\r\n\t\t\t.auth()\r\n\t\t\t.createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n\t\t\t.then((resp) => {\r\n\t\t\t\treturn firestore.collection('users').doc(resp.user.uid).set({\r\n\t\t\t\t\tfirstName: newUser.firstName,\r\n\t\t\t\t\tlastName: newUser.lastName,\r\n\t\t\t\t\tinitials: newUser.firstName[0] + newUser.lastName[0]\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({ type: 'SIGNUP_SUCCESS' });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tdispatch({ type: 'SIGNUP_ERROR', err });\r\n\t\t\t});\r\n\t};\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n\treturn (\r\n\t\t<ul className=\"right\">\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to=\"/signup\">Signup</NavLink>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to=\"/signin\">Login</NavLink>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n\tconst { auth, profile } = props;\r\n\treturn (\r\n\t\t<nav className=\"nav-wrapper grey darken-3\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<Link to=\"/\" className=\"brand-logo\">\r\n\t\t\t\t\tMarioPlan\r\n\t\t\t\t</Link>\r\n\t\t\t\t{auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />}\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tauth: state.firebase.auth,\r\n\t\tprofile: state.firebase.profile\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n\tconst { notifications } = props;\r\n\treturn (\r\n\t\t<div className=\"section\">\r\n\t\t\t<div className=\"card z-depth-0\">\r\n\t\t\t\t<div className=\"card-content\">\r\n\t\t\t\t\t<span className=\"card-title\">Notifications</span>\r\n\t\t\t\t\t<ul className=\"notifications\">\r\n\t\t\t\t\t\t{notifications &&\r\n\t\t\t\t\t\t\tnotifications.map((item) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<li key={item.id}>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"pink-text\">{item.user} </span>\r\n\t\t\t\t\t\t\t\t\t\t<span>{item.content}</span>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"grey-text note-date\">\r\n\t\t\t\t\t\t\t\t\t\t\t{moment(item.time.toDate()).fromNow()}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Notifications;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n\treturn (\r\n\t\t<div className=\"card z-depth-0 project-summary\">\r\n\t\t\t<div className=\"card-content grey-text text-darken-3\">\r\n\t\t\t\t<span className=\"card-title\">{project.title}</span>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tPosted by {project.authorFirstName} {project.authorLastName}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n\treturn (\r\n\t\t<div className=\"project-list section\">\r\n\t\t\t{projects &&\r\n\t\t\t\tprojects.map((project) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Link to={'project/' + project.id} key={project.id}>\r\n\t\t\t\t\t\t\t<ProjectSummary project={project} />\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n\trender() {\r\n\t\tconst { projects, auth, notifications } = this.props;\r\n\t\tif (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"dashboard container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col s12 m6\">\r\n\t\t\t\t\t\t<ProjectList projects={projects} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col s12 m5 offset-m1\">\r\n\t\t\t\t\t\t<Notifications notifications={notifications} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\tconsole.log(state);\r\n\treturn {\r\n\t\tprojects: state.firestore.ordered.projects,\r\n\t\tauth: state.firebase.auth,\r\n\t\tnotifications: state.firestore.ordered.notifications\r\n\t};\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps),\r\n\tfirestoreConnect([\r\n\t\t{ collection: 'projects', orderBy: [ 'createdAt', 'desc' ] },\r\n\t\t{ collection: 'notifications', limit: 3, orderBy: [ 'time', 'desc' ] }\r\n\t])\r\n)(Dashboard);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n\tconst { project, auth } = props;\r\n\tif (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n\tif (project) {\r\n\t\treturn (\r\n\t\t\t<div className=\"container section project-details\">\r\n\t\t\t\t<div className=\"card z-depth-0\">\r\n\t\t\t\t\t<div className=\"card-content\">\r\n\t\t\t\t\t\t<span className=\"card-title\">{project.title}</span>\r\n\t\t\t\t\t\t<p>{project.content}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"card-action grey lighten-4 grey-text\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tPosted by {project.authorFirstName} {project.authorLastName}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className=\"container center\">\r\n\t\t\t\t<p>Loading project....</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\tconst id = ownProps.match.params.id;\r\n\tconst projects = state.firestore.data.projects;\r\n\tconst project = projects ? projects[id] : null;\r\n\treturn {\r\n\t\tproject: project,\r\n\t\tauth: state.firebase.auth\r\n\t};\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps),\r\n\tfirestoreConnect([\r\n\t\t{\r\n\t\t\tcollection: 'projects'\r\n\t\t}\r\n\t])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authAction';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n\tstate = {\r\n\t\temail: '',\r\n\t\tpassword: ''\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.id]: e.target.value\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.signIn(this.state);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { authError, auth } = this.props;\r\n\t\tif (auth.uid) return <Redirect to=\"/\" />;\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"white\">\r\n\t\t\t\t\t<h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t\t\t<input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"password\">password</label>\r\n\t\t\t\t\t\t<input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n\t\t\t\t\t\t<div className=\"red-text center\">{authError ? <p>{authError}</p> : null}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tauthError: state.auth.authError,\r\n\t\tauth: state.firebase.auth\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsignIn: (credentials) => {\r\n\t\t\tdispatch(signIn(credentials));\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authAction';\r\n\r\nclass SignUp extends Component {\r\n\tstate = {\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tfirstName: '',\r\n\t\tlastName: ''\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.id]: e.target.value\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.signUp(this.state);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { auth, authError } = this.props;\r\n\t\tif (auth.uid) return <Redirect to=\"/\" />;\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"white\">\r\n\t\t\t\t\t<h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t\t\t<input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"password\">password</label>\r\n\t\t\t\t\t\t<input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"firstName\">First Name</label>\r\n\t\t\t\t\t\t<input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"lastName\">Last Name</label>\r\n\t\t\t\t\t\t<input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n\t\t\t\t\t\t<div className=\"red-text center\">{authError ? <p>{authError}</p> : null}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tauth: state.firebase.auth,\r\n\t\tauthError: state.auth.authError\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsignUp: (newUser) => dispatch(signUp(newUser))\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","export const createProject = (project) => {\r\n\treturn (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\t\t//make async call to database\r\n\t\tconst firestore = getFirestore();\r\n\t\tconst profile = getState().firebase.profile;\r\n\t\tconst authorId = getState().firebase.auth.uid;\r\n\t\tfirestore\r\n\t\t\t.collection('projects')\r\n\t\t\t.add({\r\n\t\t\t\t...project,\r\n\t\t\t\tauthorFirstName: profile.firstName,\r\n\t\t\t\tauthorLastName: profile.lastName,\r\n\t\t\t\tauthorId: authorId,\r\n\t\t\t\tcreatedAt: new Date()\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({ type: 'CREATE_PROJECT', project });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tdispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n\t\t\t});\r\n\t};\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n\tstate = {\r\n\t\ttitle: '',\r\n\t\tcontent: ''\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.id]: e.target.value\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\t//console.log(this.state);\r\n\t\tthis.props.createProject(this.state);\r\n\t\tthis.props.history.push('/'); //redirect to home\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { auth } = this.props;\r\n\t\tif (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"white\">\r\n\t\t\t\t\t<h5 className=\"grey-text text-darken-3\">Create new Project</h5>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"title\">Title</label>\r\n\t\t\t\t\t\t<input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"content\">Content</label>\r\n\t\t\t\t\t\t<textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tcreateProject: (project) => dispatch(createProject(project))\r\n\t};\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tauth: state.firebase.auth\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Navbar />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Dashboard} />\n\t\t\t\t\t<Route path=\"/project/:id\" component={ProjectDetails} />\n\t\t\t\t\t<Route path=\"/signin\" component={SignIn} />\n\t\t\t\t\t<Route path=\"/signup\" component={SignUp} />\n\t\t\t\t\t<Route path=\"/create\" component={CreateProject} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n\tauthError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'LOGIN_ERROR':\r\n\t\t\tconsole.log('login error');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tauthError: 'Login Failed'\r\n\t\t\t};\r\n\t\tcase 'LOGIN_SUCCESS':\r\n\t\t\tconsole.log('login success');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tauthError: null\r\n\t\t\t};\r\n\t\tcase 'SIGNOUT_SUCCESS':\r\n\t\t\tconsole.log('signout success');\r\n\t\t\treturn state;\r\n\t\tcase 'SIGNUP_SUCCESS':\r\n\t\t\tconsole.log('signup success');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tauthError: null\r\n\t\t\t};\r\n\t\tcase 'SIGNUP_ERROR':\r\n\t\t\tconsole.log('signup error');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tauthError: action.err.message\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n\tprojects: [\r\n\t\t{ id: '1', title: 'help me find peach', content: 'blah blah blah' },\r\n\t\t{ id: '2', title: 'collect all the stars', content: 'blah blah blah' },\r\n\t\t{ id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\r\n\t]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'CREATE_PROJECT':\r\n\t\t\tconsole.log('created project', action.project);\r\n\t\t\treturn state;\r\n\t\tcase 'CREATE_PROJECT_ERROR':\r\n\t\t\tconsole.log('create project error', action.err);\r\n\t\t\treturn state;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport { firestoreReducer } from 'redux-firestore';\r\n\r\nconst rootReducer = combineReducers({\r\n\tauth: authReducer,\r\n\tproject: projectReducer,\r\n\tfirebase: firebaseReducer,\r\n\tfirestore: firestoreReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/analytics';\r\nimport 'firebase/auth';\r\n\r\nvar firebaseConfig = {\r\n\tapiKey: 'AIzaSyB8gT3WoXDuP7xRkXJuY5V9Hrz87fW4hHI',\r\n\tauthDomain: 'marioplan-af7e5.firebaseapp.com',\r\n\tdatabaseURL: 'https://marioplan-af7e5.firebaseio.com',\r\n\tprojectId: 'marioplan-af7e5',\r\n\tstorageBucket: 'marioplan-af7e5.appspot.com',\r\n\tmessagingSenderId: '529373100193',\r\n\tappId: '1:529373100193:web:219348907cf976bac518e0',\r\n\tmeasurementId: 'G-GM7K6847MF'\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\nfirebase.analytics();\r\n\r\nexport default firebase;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst rrfConfig = {\n\tuserProfile: 'users',\n\tuseFirestoreForProfile: true\n};\n\nconst store = createStore(\n\trootReducer,\n\tcompose(applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })), reduxFirestore(fbConfig))\n);\n\nconst rrfProps = {\n\tfirebase: fbConfig,\n\tconfig: rrfConfig,\n\tdispatch: store.dispatch,\n\tcreateFirestoreInstance // <- needed if using firestore\n};\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<ReactReduxFirebaseProvider {...rrfProps}>\n\t\t\t<App />\n\t\t</ReactReduxFirebaseProvider>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}